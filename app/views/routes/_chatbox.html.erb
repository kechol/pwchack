<script>
$(function() {
  var chatbox = new Vue({
    el: "#chatbox",
    data: {
      room_uuid: '',
      new_message_text: '',
      messages: [],
      chat_intents: ['text', 'image', 'builtin.intent.places.get_route', 'text_with_choices']
    },
    methods: {
      post_text: function(evt) {
        params = getJsonFromUrl();
        room.text(this.new_message_text, !!params['bot']);
        this.new_message_text = '';
      },
      post_image: function(evt) {
        console.log(evt.target.files[0]);
        // room.image(this.new_message);
        var fd = new FormData();
        fd.append('uuid', this.room_uuid);
        fd.append('image', evt.target.files[0]);
        $.ajax({
          url: '/messages/upload',
          method: 'post',
          data: fd,
          dataType: 'json',
          contentType: false,
          processData: false
        }).success(function(data) {
          console.log('file upload', data);
          room.image(data.selfie.image[0].url, !!params['bot']);
        });
      },
      reply_emotion: function(emotion) {
        if(!emotion.content) {
          room.text('Show me the face!', true);
          return;
        }

        if(emotion.content.scores.anger > 0.7) {
          room.text("Haha! You look furious.", true);
        } else {
          room.text("You look like you just woke up.", true);
        }
      },
      show_choices: function(message) {
      },
      received: function(message) {
        this.messages.push(message);
        this.call_intent(message);
        this.scrolldown();
      },
      onload: function() {
        var _this = this;
        this.room_uuid = this.$el.attributes['data-uuid'].value;

        $.getJSON("/messages.json?uuid=" + this.room_uuid, function(data) {
          _this.messages = data.messages;
          messages = $('#messages');
          console.log('init messages', JSON.stringify(data.messages));
          _this.scrolldown();

          // if(data.messages.length == 0) {
            // console.log('init first message', room);
            // room.text('Hi, I\'m Homie. Let me navigate you!', true);
          // }
        });
      },
      scrolldown: function() {
        setTimeout(function() {
          messages = $('#messages');
          messages.scrollTop(messages[0].scrollHeight);
        }, 100);
      },
      toggle_chatbox: function() {
        $(this.$el).toggleClass('open');
      },
      choose_answer: function(ch) {
        console.log(ch);
      },
      call_intent: function(message) {
        console.log('call_intent', message.intent);
        this.eventHub.$emit(message.intent, message);
      }
    }
  });

  chatbox.eventHub.$on('emotion', chatbox.reply_emotion);
  chatbox.eventHub.$on('text_with_choices', chatbox.show_choices);


  var cable = ActionCable.createConsumer();
  var room = cable.subscriptions.create({
      channel: 'RoomChannel',
      room: chatbox.$el.attributes['data-uuid'].value
    }, {
    received: function(data) {
      console.log('cable.received', data);
      chatbox.received(data.message);
    },
    text: function(message, bot_flg) {
      console.log('cable.post', message);
      this.perform('post', { content: { text: message } , bot_flg: bot_flg, intent: 'text' });
    },
    image: function(message, bot_flg) {
      console.log('cable.post', message);
      this.perform('post', { content: { image_url: message } , bot_flg: bot_flg, intent: 'image' });
    }
  });

  chatbox.onload();
});
</script>
